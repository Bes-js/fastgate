{"version":3,"sources":["../../src/services/router.ts"],"names":[],"mappings":";;;;;AAEA,IAAqB,YAAA,GAArB,MAAqB,YAAY,CAAA;AAAA,EAC/B,WAAc,GAAA;AAAA;AAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhB,aAAoB,IAAK,CAAA,GAAA,EAAa,MAAgG,EAAA;AACpI,IAAA,OAAO,IAAI,OAAA,CAAQ,CAAC,OAAA,EAAS,MAAW,KAAA;AACxC,MAAK,IAAA,CAAA;AAAA,QACD,GAAA;AAAA,QACA,MAAA;AAAA,QACA,OAAS,EAAA;AAAA,UACL,cAAgB,EAAA,kBAAA;AAAA,UAChB,QAAU,EAAA;AAAA,SACd;AAAA,QACA,OAAS,EAAA;AAAA,OACZ,CAAA,CAAE,IAAK,CAAA,CAAC,QAAa,KAAA;AAClB,QAAA,OAAA,CAAQ,SAAS,IAAI,CAAA;AAAA,OACxB,CAAA,CAAE,KAAM,CAAA,CAAC,KAAU,KAAA;AAChB,QAAA,MAAA,CAAO,KAAK,CAAA;AAAA,OACf,CAAA;AAAA,KACF,CAAA;AAAA;AAGH,CAAA;AA3BiC,MAAA,CAAA,YAAA,EAAA,aAAA,CAAA;AAAjC,IAAqB,WAArB,GAAA","file":"router.mjs","sourcesContent":["import nyro from 'nyro';\n\nexport default class ProxyRouter {\n  constructor() { };\n\n  /**\n   * @param url URL to send the request to\n   * @param method HTTP method to use\n   * @returns Promise<any>\n   * @description Send a request to a URL\n   */\n  public static async send(url: string, method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"HEAD\" | \"OPTIONS\" | \"CONNECT\" | \"TRACE\") {\n    return new Promise((resolve, reject) => {\n    nyro({\n        url: url,\n        method: method,\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': '*/*'\n        },\n        timeout: 10000\n    }).then((response) => {\n        resolve(response.body);\n    }).catch((error) => {\n        reject(error);\n    })\n  })\n }\n \n}"]}